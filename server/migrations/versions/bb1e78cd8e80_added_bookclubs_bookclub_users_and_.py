"""added bookclubs, bookclub_users, and relationships

Revision ID: bb1e78cd8e80
Revises: 82e6c7a51547
Create Date: 2023-12-12 14:31:10.836595

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'bb1e78cd8e80'
down_revision = '82e6c7a51547'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('book_clubs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(length=300), nullable=True),
    sa.Column('avatar_url', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name=op.f('fk_book_clubs_owner_id_users')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('book_clubs_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('book_club_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('joined_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['book_club_id'], ['book_clubs.id'], name=op.f('fk_book_clubs_users_book_club_id_book_clubs')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_book_clubs_users_user_id_users')),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('book_clubs_users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_book_clubs_users_book_club_id'), ['book_club_id'], unique=False)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('first_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('last_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.create_unique_constraint(batch_op.f('uq_users_email'), ['email'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_users_email'), type_='unique')
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('last_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('first_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(),
               nullable=True)

    with op.batch_alter_table('book_clubs_users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_book_clubs_users_book_club_id'))

    op.drop_table('book_clubs_users')
    op.drop_table('book_clubs')
    # ### end Alembic commands ###
