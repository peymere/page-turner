{"ast":null,"code":"var _jsxFileName = \"/Users/peytonmeredith/Development/Flatiron/Phase-5/PageTurnerProject/page-turner-app/client/src/components/Login.jsx\",\n  _s = $RefreshSig$();\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useOutletContext } from 'react-router-dom';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const setUser = useOutletContext();\n  const [formErrors, setFormErrors] = useState([]);\n  const signupSchema = Yup.object({\n    email: Yup.string().email('Invalid Email Address').required('Email Required'),\n    username: Yup.string().min(3, \"Username must be between 3 and 15 characters\").max(15, \"Username must be between 3 and 15 characters\").required('Username Required'),\n    firstName: Yup.string().min(2, \"First Name must be at least 2 characters\").required('First Name Required'),\n    lastName: Yup.string().min(2, \"Last name must be at least 2 characters\").required('Last name Required')\n  });\n  const passwordValidationSchema = Yup.object().shape({\n    password: Yup.string().min(8, 'Password must be at least 8 characters').max(20, 'Password must not exceed 20 characters').matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d@$!%*?&]/, 'Password must contain at least one uppercase letter, one lowercase letter, and one number').required('Password is required'),\n    confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Must confirm your password')\n  });\n  const combinedSchema = Yup.object().shape({\n    ...signupSchema.fields,\n    ...passwordValidationSchema.fields\n  });\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      username: '',\n      firstName: '',\n      lastName: '',\n      password: '',\n      confirmPassword: ''\n    },\n    validationSchema: combinedSchema,\n    onSubmit: (values, {\n      resetForm\n    }) => {\n      fetch('/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(values)\n      }).then(r => {\n        console.log(values);\n        if (r.ok) {\n          resetForm({\n            values: ''\n          });\n          r.json().then(({\n            user\n          }) => {\n            setUser(user);\n            //navigate into site\n          });\n        } else {\n          console.log('error');\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicUsername\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), formErrors.length > 0 ? formErrors.map(err => /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: err\n      }, err, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }, this)) : null, /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"iuh+7H87VQGiJFPlwyuxA9zR/I8=\", false, function () {\n  return [useOutletContext, useFormik];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Button","Form","useFormik","Yup","useOutletContext","useState","jsxDEV","_jsxDEV","Login","_s","setUser","formErrors","setFormErrors","signupSchema","object","email","string","required","username","min","max","firstName","lastName","passwordValidationSchema","shape","password","matches","confirmPassword","oneOf","ref","combinedSchema","fields","formik","initialValues","validationSchema","onSubmit","values","resetForm","fetch","method","headers","body","JSON","stringify","then","r","console","log","ok","json","user","children","fileName","_jsxFileName","lineNumber","columnNumber","Group","className","controlId","Label","Control","type","placeholder","length","map","err","style","color","variant","_c","$RefreshReg$"],"sources":["/Users/peytonmeredith/Development/Flatiron/Phase-5/PageTurnerProject/page-turner-app/client/src/components/Login.jsx"],"sourcesContent":["import Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useOutletContext,  } from 'react-router-dom'\nimport { useState } from 'react';\n\nfunction Login() {\n    const setUser = useOutletContext()\n    const [formErrors, setFormErrors] = useState([]);\n\n    const signupSchema = Yup.object({\n            email: Yup.string().email('Invalid Email Address').required('Email Required'),\n            username: Yup.string()\n                .min(3, \"Username must be between 3 and 15 characters\")\n                .max(15, \"Username must be between 3 and 15 characters\")\n                .required('Username Required'),\n            firstName: Yup.string()\n                .min(2, \"First Name must be at least 2 characters\")\n                .required('First Name Required'),\n            lastName: Yup.string()\n                .min(2, \"Last name must be at least 2 characters\")\n                .required('Last name Required'),\n        }\n    )\n    const passwordValidationSchema = Yup.object().shape({\n        password: Yup.string()\n            .min(8, 'Password must be at least 8 characters')\n            .max(20, 'Password must not exceed 20 characters')\n            .matches(\n            /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d@$!%*?&]/,\n            'Password must contain at least one uppercase letter, one lowercase letter, and one number')\n            .required('Password is required'),\n        confirmPassword: Yup.string()\n            .oneOf([Yup.ref('password'), null], 'Passwords must match')\n            .required('Must confirm your password'),\n        });\n\n    const combinedSchema = Yup.object().shape({\n        ...signupSchema.fields,\n        ...passwordValidationSchema.fields,\n    });\n    \n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            username: '',\n            firstName: '',\n            lastName: '',\n            password: '',\n            confirmPassword: ''\n        },\n        validationSchema: combinedSchema,\n        onSubmit: (values, {resetForm}) => {\n            fetch('/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(values)\n            }).then((r) => {\n                console.log(values)\n                if (r.ok) {\n                    resetForm({values: ''})\n                    r.json().then(({user}) => {\n                        setUser(user)\n                        //navigate into site\n                    })\n                } else {\n                    console.log('error')\n                }\n            })\n        }\n    })\n\n\n    return (\n        <div>\n            <h1>Login</h1>\n            <Form>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Username\" />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" />\n                </Form.Group>\n                {formErrors.length > 0\n                    ? formErrors.map((err) => (\n                        <p key={err} style={{ color: \"red\" }}>\n                            {err}\n                        </p>\n                    ))\n                    : null}\n                <Button variant=\"primary\" type=\"submit\">\n                    Login\n                </Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default Login"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AACvC,SAASC,SAAS,QAAQ,QAAQ;AAClC,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAASC,gBAAgB,QAAU,kBAAkB;AACrD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,OAAO,GAAGN,gBAAgB,CAAC,CAAC;EAClC,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMQ,YAAY,GAAGV,GAAG,CAACW,MAAM,CAAC;IACxBC,KAAK,EAAEZ,GAAG,CAACa,MAAM,CAAC,CAAC,CAACD,KAAK,CAAC,uBAAuB,CAAC,CAACE,QAAQ,CAAC,gBAAgB,CAAC;IAC7EC,QAAQ,EAAEf,GAAG,CAACa,MAAM,CAAC,CAAC,CACjBG,GAAG,CAAC,CAAC,EAAE,8CAA8C,CAAC,CACtDC,GAAG,CAAC,EAAE,EAAE,8CAA8C,CAAC,CACvDH,QAAQ,CAAC,mBAAmB,CAAC;IAClCI,SAAS,EAAElB,GAAG,CAACa,MAAM,CAAC,CAAC,CAClBG,GAAG,CAAC,CAAC,EAAE,0CAA0C,CAAC,CAClDF,QAAQ,CAAC,qBAAqB,CAAC;IACpCK,QAAQ,EAAEnB,GAAG,CAACa,MAAM,CAAC,CAAC,CACjBG,GAAG,CAAC,CAAC,EAAE,yCAAyC,CAAC,CACjDF,QAAQ,CAAC,oBAAoB;EACtC,CACJ,CAAC;EACD,MAAMM,wBAAwB,GAAGpB,GAAG,CAACW,MAAM,CAAC,CAAC,CAACU,KAAK,CAAC;IAChDC,QAAQ,EAAEtB,GAAG,CAACa,MAAM,CAAC,CAAC,CACjBG,GAAG,CAAC,CAAC,EAAE,wCAAwC,CAAC,CAChDC,GAAG,CAAC,EAAE,EAAE,wCAAwC,CAAC,CACjDM,OAAO,CACR,kDAAkD,EAClD,2FAA2F,CAAC,CAC3FT,QAAQ,CAAC,sBAAsB,CAAC;IACrCU,eAAe,EAAExB,GAAG,CAACa,MAAM,CAAC,CAAC,CACxBY,KAAK,CAAC,CAACzB,GAAG,CAAC0B,GAAG,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,EAAE,sBAAsB,CAAC,CAC1DZ,QAAQ,CAAC,4BAA4B;EAC1C,CAAC,CAAC;EAEN,MAAMa,cAAc,GAAG3B,GAAG,CAACW,MAAM,CAAC,CAAC,CAACU,KAAK,CAAC;IACtC,GAAGX,YAAY,CAACkB,MAAM;IACtB,GAAGR,wBAAwB,CAACQ;EAChC,CAAC,CAAC;EAEF,MAAMC,MAAM,GAAG9B,SAAS,CAAC;IACrB+B,aAAa,EAAE;MACXlB,KAAK,EAAE,EAAE;MACTG,QAAQ,EAAE,EAAE;MACZG,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZG,QAAQ,EAAE,EAAE;MACZE,eAAe,EAAE;IACrB,CAAC;IACDO,gBAAgB,EAAEJ,cAAc;IAChCK,QAAQ,EAAEA,CAACC,MAAM,EAAE;MAACC;IAAS,CAAC,KAAK;MAC/BC,KAAK,CAAC,QAAQ,EAAE;QACZC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,MAAM;MAC/B,CAAC,CAAC,CAACQ,IAAI,CAAEC,CAAC,IAAK;QACXC,OAAO,CAACC,GAAG,CAACX,MAAM,CAAC;QACnB,IAAIS,CAAC,CAACG,EAAE,EAAE;UACNX,SAAS,CAAC;YAACD,MAAM,EAAE;UAAE,CAAC,CAAC;UACvBS,CAAC,CAACI,IAAI,CAAC,CAAC,CAACL,IAAI,CAAC,CAAC;YAACM;UAAI,CAAC,KAAK;YACtBxC,OAAO,CAACwC,IAAI,CAAC;YACb;UACJ,CAAC,CAAC;QACN,CAAC,MAAM;UACHJ,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;QACxB;MACJ,CAAC,CAAC;IACN;EACJ,CAAC,CAAC;EAGF,oBACIxC,OAAA;IAAA4C,QAAA,gBACI5C,OAAA;MAAA4C,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdhD,OAAA,CAACN,IAAI;MAAAkD,QAAA,gBACD5C,OAAA,CAACN,IAAI,CAACuD,KAAK;QAACC,SAAS,EAAC,MAAM;QAACC,SAAS,EAAC,mBAAmB;QAAAP,QAAA,gBACtD5C,OAAA,CAACN,IAAI,CAAC0D,KAAK;UAAAR,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACjChD,OAAA,CAACN,IAAI,CAAC2D,OAAO;UAACC,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC;QAAU;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eAEbhD,OAAA,CAACN,IAAI,CAACuD,KAAK;QAACC,SAAS,EAAC,MAAM;QAACC,SAAS,EAAC,mBAAmB;QAAAP,QAAA,gBACtD5C,OAAA,CAACN,IAAI,CAAC0D,KAAK;UAAAR,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACjChD,OAAA,CAACN,IAAI,CAAC2D,OAAO;UAACC,IAAI,EAAC,UAAU;UAACC,WAAW,EAAC;QAAU;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,EACZ5C,UAAU,CAACoD,MAAM,GAAG,CAAC,GAChBpD,UAAU,CAACqD,GAAG,CAAEC,GAAG,iBACjB1D,OAAA;QAAa2D,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAM,CAAE;QAAAhB,QAAA,EAChCc;MAAG,GADAA,GAAG;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAER,CACN,CAAC,GACA,IAAI,eACVhD,OAAA,CAACP,MAAM;QAACoE,OAAO,EAAC,SAAS;QAACP,IAAI,EAAC,QAAQ;QAAAV,QAAA,EAAC;MAExC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAAC9C,EAAA,CA/FQD,KAAK;EAAA,QACMJ,gBAAgB,EAmCjBF,SAAS;AAAA;AAAAmE,EAAA,GApCnB7D,KAAK;AAiGd,eAAeA,KAAK;AAAA,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}